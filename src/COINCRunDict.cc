//
// File generated by rootcint at Mon May 20 12:27:45 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME COINCRunDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "COINCRunDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void COINCRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_COINCRun(void *p = 0);
   static void *newArray_COINCRun(Long_t size, void *p);
   static void delete_COINCRun(void *p);
   static void deleteArray_COINCRun(void *p);
   static void destruct_COINCRun(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::COINCRun*)
   {
      ::COINCRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::COINCRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("COINCRun", ::COINCRun::Class_Version(), "./COINCRun.hh", 8,
                  typeid(::COINCRun), DefineBehavior(ptr, ptr),
                  &::COINCRun::Dictionary, isa_proxy, 4,
                  sizeof(::COINCRun) );
      instance.SetNew(&new_COINCRun);
      instance.SetNewArray(&newArray_COINCRun);
      instance.SetDelete(&delete_COINCRun);
      instance.SetDeleteArray(&deleteArray_COINCRun);
      instance.SetDestructor(&destruct_COINCRun);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::COINCRun*)
   {
      return GenerateInitInstanceLocal((::COINCRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::COINCRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *COINCRun::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *COINCRun::Class_Name()
{
   return "COINCRun";
}

//______________________________________________________________________________
const char *COINCRun::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::COINCRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int COINCRun::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::COINCRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void COINCRun::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::COINCRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *COINCRun::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::COINCRun*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void COINCRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class COINCRun.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(COINCRun::Class(),this);
   } else {
      R__b.WriteClassBuffer(COINCRun::Class(),this);
   }
}

//______________________________________________________________________________
void COINCRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class COINCRun.
      TClass *R__cl = ::COINCRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*event", &event);
      PACSSRun::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_COINCRun(void *p) {
      return  p ? new(p) ::COINCRun : new ::COINCRun;
   }
   static void *newArray_COINCRun(Long_t nElements, void *p) {
      return p ? new(p) ::COINCRun[nElements] : new ::COINCRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_COINCRun(void *p) {
      delete ((::COINCRun*)p);
   }
   static void deleteArray_COINCRun(void *p) {
      delete [] ((::COINCRun*)p);
   }
   static void destruct_COINCRun(void *p) {
      typedef ::COINCRun current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::COINCRun

/********************************************************
* COINCRunDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableCOINCRunDict();

extern "C" void G__set_cpp_environmentCOINCRunDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("COINCRun.hh");
  G__cpp_reset_tagtableCOINCRunDict();
}
#include <new>
extern "C" int G__cpp_dllrevCOINCRunDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* COINCRun */
static int G__COINCRunDict_658_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   COINCRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new COINCRun[n];
     } else {
       p = new((void*) gvp) COINCRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new COINCRun;
     } else {
       p = new((void*) gvp) COINCRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   COINCRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new COINCRun(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) COINCRun(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((COINCRun*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((COINCRun*) G__getstructoffset())->GetEvent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((COINCRun*) G__getstructoffset())->GetNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((COINCRun*) G__getstructoffset())->Get1DHist(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((COINCRun*) G__getstructoffset())->Get2DHist(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((COINCRun*) G__getstructoffset())->PlotEnergyHist((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotEnergyHist((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotEnergyHist((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotEnergyHist((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotEnergyHist((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotEnergyHist((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotEnergyHist();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotEnergySlice((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotEnergySlice((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotEnergySlice((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotEnergySlice((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotEnergySlice();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((COINCRun*) G__getstructoffset())->PlotWaveforms((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotWaveformStack(*((TCut*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotWaveformStack();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotTimeBetweenCoincEvents((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotTimeBetweenCoincEvents((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotTimeBetweenCoincEvents((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotTimeBetweenCoincEvents();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotTimeBetweenCoincEvents((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotTimeBetweenCoincEvents((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotTimeBetweenCoincEvents((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotTimeBetweenCoincEvents((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotChargeMap((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotChargeMap((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotChargeMap((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotChargeMap((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotChargeMap((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotChargeMap();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotChargeMap((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotChargeMap((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotChargeProj((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotChargeProj((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotChargeProj((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotChargeProj((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotChargeProj((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotChargeProj();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotChargeProj((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotChargeProj((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotChargeProjSlice();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((COINCRun*) G__getstructoffset())->PlotGPosMap(
*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((COINCRun*) G__getstructoffset())->PlotGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotGPosMap(*((TCut*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotGPosMap();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((COINCRun*) G__getstructoffset())->PlotGPosProj(
*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((COINCRun*) G__getstructoffset())->PlotGPosProj(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotGPosProj(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotGPosProj(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotGPosProj(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotGPosProj(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotGPosProj(*((TCut*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotGPosProj();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((COINCRun*) G__getstructoffset())->PlotSGPosMap(
*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((COINCRun*) G__getstructoffset())->PlotSGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotSGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotSGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotSGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotSGPosMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotSGPosMap(*((TCut*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotSGPosMap();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2Dist((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2Dist((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2Dist((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2Dist((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2Dist((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2Dist();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2SGMap((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2SGMap((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotT1ToT2SGMap();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((COINCRun*) G__getstructoffset())->PlotAOverEMap(
*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((COINCRun*) G__getstructoffset())->PlotAOverEMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((COINCRun*) G__getstructoffset())->PlotAOverEMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((COINCRun*) G__getstructoffset())->PlotAOverEMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((COINCRun*) G__getstructoffset())->PlotAOverEMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((COINCRun*) G__getstructoffset())->PlotAOverEMap(*((TCut*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((COINCRun*) G__getstructoffset())->PlotAOverEMap(*((TCut*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((COINCRun*) G__getstructoffset())->PlotAOverEMap();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((COINCRun*) G__getstructoffset())->SubtractBaseline(*((vector<double>*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) COINCRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) COINCRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) COINCRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      COINCRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((COINCRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) COINCRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) COINCRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) COINCRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__COINCRunDict_658_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) COINCRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__COINCRunDict_658_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   COINCRun* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new COINCRun(*(COINCRun*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef COINCRun G__TCOINCRun;
static int G__COINCRunDict_658_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (COINCRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((COINCRun*) (soff+(sizeof(COINCRun)*i)))->~G__TCOINCRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (COINCRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((COINCRun*) (soff))->~G__TCOINCRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__COINCRunDict_658_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   COINCRun* dest = (COINCRun*) G__getstructoffset();
   *dest = *(COINCRun*) libp->para[0].ref;
   const COINCRun& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* COINCRun */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCOINCRunDict {
 public:
  G__Sizep2memfuncCOINCRunDict(): p(&G__Sizep2memfuncCOINCRunDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCOINCRunDict::*p)();
};

size_t G__get_sizep2memfuncCOINCRunDict()
{
  G__Sizep2memfuncCOINCRunDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCOINCRunDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun))) {
     COINCRun *G__Lderived;
     G__Lderived=(COINCRun*)0x1000;
     {
       PACSSRun *G__Lpbase=(PACSSRun*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun),G__get_linked_tagnum(&G__COINCRunDictLN_PACSSRun),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun),G__get_linked_tagnum(&G__COINCRunDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCOINCRunDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__COINCRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__COINCRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__COINCRunDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__COINCRunDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__COINCRunDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__COINCRunDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__COINCRunDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__COINCRunDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__COINCRunDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__COINCRunDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__COINCRunDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__COINCRunDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__COINCRunDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__COINCRunDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__COINCRunDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__COINCRunDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__COINCRunDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__COINCRunDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__COINCRunDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__COINCRunDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* COINCRun */
static void G__setup_memvarCOINCRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun));
   { COINCRun *p; p=(COINCRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__COINCRunDictLN_COINCEvent),-1,-1,2,"event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__COINCRunDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCOINCRunDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCOINCRun(void) {
   /* COINCRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun));
   G__memfunc_setup("COINCRun",673,G__COINCRunDict_658_0_1, 105, G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("COINCRun",673,G__COINCRunDict_658_0_2, 105, G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - newFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__COINCRunDict_658_0_3, 85, G__get_linked_tagnum(&G__COINCRunDictLN_COINCEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__COINCRunDict_658_0_4, 85, G__get_linked_tagnum(&G__COINCRunDictLN_COINCEvent), -1, 0, 1, 1, 1, 0, "i - - 0 - nEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextEvent",1217,G__COINCRunDict_658_0_5, 85, G__get_linked_tagnum(&G__COINCRunDictLN_COINCEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get1DHist",813,G__COINCRunDict_658_0_6, 85, G__get_linked_tagnum(&G__COINCRunDictLN_TH1D), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - histName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get2DHist",814,G__COINCRunDict_658_0_7, 85, G__get_linked_tagnum(&G__COINCRunDictLN_TH2D), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - histName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotEnergyHist",1441,G__COINCRunDict_658_0_8, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 '16384' nGe d - - 0 '0.0' xMinGe "
"d - - 0 '16383.0' xMaxGe i - - 0 '2048' nLYSO "
"d - - 0 '-10.0' xMinLYSO d - - 0 '1023.0' xMaxLYSO", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotEnergySlice",1529,G__COINCRunDict_658_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' rowXlow i - - 0 '7' rowXup "
"i - - 0 '0' rowYlow i - - 0 '7' rowYup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotWaveforms",1369,G__COINCRunDict_658_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotWaveformStack",1756,G__COINCRunDict_658_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TCut' - 0 '\"\"' inCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotTimeBetweenCoincEvents",2649,G__COINCRunDict_658_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 '500' nX d - - 0 '-5000.0' xMin "
"d - - 0 '5000.0' xMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotTimeBetweenCoincEvents",2649,G__COINCRunDict_658_0_13, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - nStart i - - 0 - nEnd "
"i - - 0 '500' nX d - - 0 '-5000.0' xMin "
"d - - 0 '5000.0' xMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotChargeMap",1287,G__COINCRunDict_658_0_14, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 '0.0' eg1 d - - 0 '16383.0' eg2 "
"d - - 0 '-10.0' el1 d - - 0 '2048.0' el2 "
"g - - 0 'true' gc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotChargeMap",1287,G__COINCRunDict_658_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - nEvent g - - 0 'true' gc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotChargeProj",1412,G__COINCRunDict_658_0_16, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 '0.0' eg1 d - - 0 '16383.0' eg2 "
"d - - 0 '-10.0' el1 d - - 0 '2048.0' el2 "
"g - - 0 'true' gc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotChargeProj",1412,G__COINCRunDict_658_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - nEvent g - - 0 'true' gc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotChargeProjSlice",1908,G__COINCRunDict_658_0_18, 121, -1, -1, 0, 8, 1, 1, 0, 
"d - - 0 '0.0' eg1 d - - 0 '16383.0' eg2 "
"d - - 0 '-10.0' el1 d - - 0 '2048.0' el2 "
"i - - 0 '0' rowXlow i - - 0 '7' rowXup "
"i - - 0 '0' rowYlow i - - 0 '7' rowYup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotGPosMap",1078,G__COINCRunDict_658_0_19, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'TCut' - 0 '\"\"' inCut i - - 0 '49' nX "
"d - - 0 '0.0' xMin d - - 0 '49.0' xMax "
"i - - 0 '49' nY d - - 0 '0.0' yMin "
"d - - 0 '49.0' yMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotGPosProj",1203,G__COINCRunDict_658_0_20, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'TCut' - 0 '\"\"' inCut i - - 0 '49' nX "
"d - - 0 '0.0' xMin d - - 0 '49.0' xMax "
"i - - 0 '49' nY d - - 0 '0.0' yMin "
"d - - 0 '49.0' yMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotSGPosMap",1161,G__COINCRunDict_658_0_21, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'TCut' - 0 '\"\"' inCut i - - 0 '49' nX "
"d - - 0 '0.0' xMin d - - 0 '49.0' xMax "
"i - - 0 '49' nY d - - 0 '0.0' yMin "
"d - - 0 '49.0' yMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotT1ToT2Dist",1281,G__COINCRunDict_658_0_22, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 '0.10' T1 d - - 0 '0.90' T2 "
"i - - 0 '500' nX d - - 0 '-5000.0' xMin "
"d - - 0 '5000.0' xMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotT1ToT2SGMap",1317,G__COINCRunDict_658_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 '0.10' T1 d - - 0 '0.90' T2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotAOverEMap",1247,G__COINCRunDict_658_0_24, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'TCut' - 0 '\"\"' inCut i - - 0 '49' nX "
"d - - 0 '0.0' xMin d - - 0 '49.0' xMax "
"i - - 0 '49' nY d - - 0 '0.0' yMin "
"d - - 0 '49.0' yMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubtractBaseline",1643,G__COINCRunDict_658_0_25, 117, G__get_linked_tagnum(&G__COINCRunDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - aWF i - - 0 - nSampAvg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__COINCRunDict_658_0_26, 85, G__get_linked_tagnum(&G__COINCRunDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&COINCRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__COINCRunDict_658_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&COINCRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__COINCRunDict_658_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&COINCRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__COINCRunDict_658_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&COINCRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__COINCRunDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__COINCRunDict_658_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__COINCRunDict_658_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&COINCRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__COINCRunDict_658_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&COINCRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__COINCRunDict_658_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&COINCRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__COINCRunDict_658_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&COINCRun::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("COINCRun", 673, G__COINCRunDict_658_0_38, (int) ('i'), G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun), -1, 0, 1, 1, 1, 0, "u 'COINCRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~COINCRun", 799, G__COINCRunDict_658_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__COINCRunDict_658_0_40, (int) ('u'), G__get_linked_tagnum(&G__COINCRunDictLN_COINCRun), -1, 1, 1, 1, 1, 0, "u 'COINCRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCOINCRunDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCOINCRunDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCOINCRunDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__COINCRunDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__COINCRunDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TCut = { "TCut" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__COINCRunDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_PACSSRun = { "PACSSRun" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_COINCEvent = { "COINCEvent" , 99 , -1 };
G__linked_taginfo G__COINCRunDictLN_COINCRun = { "COINCRun" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCOINCRunDict() {
  G__COINCRunDictLN_TClass.tagnum = -1 ;
  G__COINCRunDictLN_TBuffer.tagnum = -1 ;
  G__COINCRunDictLN_TMemberInspector.tagnum = -1 ;
  G__COINCRunDictLN_TObject.tagnum = -1 ;
  G__COINCRunDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__COINCRunDictLN_string.tagnum = -1 ;
  G__COINCRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__COINCRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__COINCRunDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__COINCRunDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__COINCRunDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__COINCRunDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__COINCRunDictLN_TCut.tagnum = -1 ;
  G__COINCRunDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__COINCRunDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__COINCRunDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__COINCRunDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__COINCRunDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__COINCRunDictLN_TH1D.tagnum = -1 ;
  G__COINCRunDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__COINCRunDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__COINCRunDictLN_TH2D.tagnum = -1 ;
  G__COINCRunDictLN_PACSSRun.tagnum = -1 ;
  G__COINCRunDictLN_COINCEvent.tagnum = -1 ;
  G__COINCRunDictLN_COINCRun.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCOINCRunDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_string);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TCut);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_PACSSRun);
   G__get_linked_tagnum_fwd(&G__COINCRunDictLN_COINCEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__COINCRunDictLN_COINCRun),sizeof(COINCRun),-1,324864,(char*)NULL,G__setup_memvarCOINCRun,G__setup_memfuncCOINCRun);
}
extern "C" void G__cpp_setupCOINCRunDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupCOINCRunDict()");
  G__set_cpp_environmentCOINCRunDict();
  G__cpp_setup_tagtableCOINCRunDict();

  G__cpp_setup_inheritanceCOINCRunDict();

  G__cpp_setup_typetableCOINCRunDict();

  G__cpp_setup_memvarCOINCRunDict();

  G__cpp_setup_memfuncCOINCRunDict();
  G__cpp_setup_globalCOINCRunDict();
  G__cpp_setup_funcCOINCRunDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCOINCRunDict();
  return;
}
class G__cpp_setup_initCOINCRunDict {
  public:
    G__cpp_setup_initCOINCRunDict() { G__add_setup_func("COINCRunDict",(G__incsetup)(&G__cpp_setupCOINCRunDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCOINCRunDict() { G__remove_setup_func("COINCRunDict"); }
};
G__cpp_setup_initCOINCRunDict G__cpp_setup_initializerCOINCRunDict;

