//
// File generated by rootcint at Mon May 20 15:08:36 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ParseGEDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ParseGEDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ParseGE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ParseGE(void *p = 0);
   static void *newArray_ParseGE(Long_t size, void *p);
   static void delete_ParseGE(void *p);
   static void deleteArray_ParseGE(void *p);
   static void destruct_ParseGE(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ParseGE*)
   {
      ::ParseGE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ParseGE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ParseGE", ::ParseGE::Class_Version(), "./ParseGE.hh", 12,
                  typeid(::ParseGE), DefineBehavior(ptr, ptr),
                  &::ParseGE::Dictionary, isa_proxy, 4,
                  sizeof(::ParseGE) );
      instance.SetNew(&new_ParseGE);
      instance.SetNewArray(&newArray_ParseGE);
      instance.SetDelete(&delete_ParseGE);
      instance.SetDeleteArray(&deleteArray_ParseGE);
      instance.SetDestructor(&destruct_ParseGE);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ParseGE*)
   {
      return GenerateInitInstanceLocal((::ParseGE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ParseGE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *ParseGE::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ParseGE::Class_Name()
{
   return "ParseGE";
}

//______________________________________________________________________________
const char *ParseGE::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ParseGE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParseGE::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ParseGE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParseGE::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ParseGE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParseGE::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ParseGE*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ParseGE::Streamer(TBuffer &R__b)
{
   // Stream an object of class ParseGE.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ParseGE::Class(),this);
   } else {
      R__b.WriteClassBuffer(ParseGE::Class(),this);
   }
}

//______________________________________________________________________________
void ParseGE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ParseGE.
      TClass *R__cl = ::ParseGE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&inFileName);
      R__insp.InspectMember("string", (void*)&inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&outFileName);
      R__insp.InspectMember("string", (void*)&outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataFile", (void*)&dataFile);
      R__insp.InspectMember("ifstream", (void*)&dataFile, "dataFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rootFile", &rootFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eventTree", &eventTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fileNumber", &fileNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawSampleLength", &rawSampleLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energySampleLength", &energySampleLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawWrap", &rawWrap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawStartIndex", &rawStartIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numCurrEvent", &numCurrEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numTotalEvents", &numTotalEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*event", &event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "word", &word);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "header", &header);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bufferLength", &bufferLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventLength", &eventLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doneReading", &doneReading);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clockMultiplier", &clockMultiplier);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "error", &error);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ParseGE(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ParseGE : new ::ParseGE;
   }
   static void *newArray_ParseGE(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ParseGE[nElements] : new ::ParseGE[nElements];
   }
   // Wrapper around operator delete
   static void delete_ParseGE(void *p) {
      delete ((::ParseGE*)p);
   }
   static void deleteArray_ParseGE(void *p) {
      delete [] ((::ParseGE*)p);
   }
   static void destruct_ParseGE(void *p) {
      typedef ::ParseGE current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ParseGE

/********************************************************
* ParseGEDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableParseGEDict();

extern "C" void G__set_cpp_environmentParseGEDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("ParseGE.hh");
  G__cpp_reset_tagtableParseGEDict();
}
#include <new>
extern "C" int G__cpp_dllrevParseGEDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ParseGE */
static int G__ParseGEDict_655_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParseGE* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParseGE[n];
     } else {
       p = new((void*) gvp) ParseGE[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParseGE;
     } else {
       p = new((void*) gvp) ParseGE;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ParseGEDictLN_ParseGE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParseGE* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParseGE(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ParseGE(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParseGE(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) ParseGE(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ParseGEDictLN_ParseGE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ParseGE*) G__getstructoffset())->ReadAllEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ParseGE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParseGE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ParseGE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ParseGE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ParseGE*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParseGE*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParseGE*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParseGE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParseGE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParseGE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParseGE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ParseGEDict_655_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParseGE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ParseGE G__TParseGE;
static int G__ParseGEDict_655_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ParseGE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ParseGE*) (soff+(sizeof(ParseGE)*i)))->~G__TParseGE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ParseGE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ParseGE*) (soff))->~G__TParseGE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ParseGE */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncParseGEDict {
 public:
  G__Sizep2memfuncParseGEDict(): p(&G__Sizep2memfuncParseGEDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncParseGEDict::*p)();
};

size_t G__get_sizep2memfuncParseGEDict()
{
  G__Sizep2memfuncParseGEDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceParseGEDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableParseGEDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ParseGEDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ParseGEDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ParseGEDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ParseGEDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ParseGEDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ParseGEDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ParseGEDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ParseGEDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ParseGEDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ParseGEDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ParseGEDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ParseGEDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ParseGEDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__ParseGEDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ParseGEDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ParseGEDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__ParseGEDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ParseGEDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ParseGEDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ParseGEDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ParseGEDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ParseGE */
static void G__setup_memvarParseGE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ParseGEDictLN_ParseGE));
   { ParseGE *p; p=(ParseGE*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ParseGEDictLN_string),-1,-1,2,"inFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ParseGEDictLN_string),-1,-1,2,"outFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ParseGEDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,2,"dataFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ParseGEDictLN_TFile),-1,-1,2,"rootFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ParseGEDictLN_TTree),-1,-1,2,"eventTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fileNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"rawSampleLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"energySampleLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"rawWrap=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"rawStartIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"numCurrEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"numTotalEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ParseGEDictLN_GEEvent),-1,-1,2,"event=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"word=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"header=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"bufferLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"eventLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"doneReading=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"clockMultiplier=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->error)-(long)(p)),103,0,0,-1,-1,-1,1,"error=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ParseGEDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarParseGEDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncParseGE(void) {
   /* ParseGE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ParseGEDictLN_ParseGE));
   G__memfunc_setup("OpenGEFile",926,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenROOTFile",1110,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadWord",792,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFileHeader",1349,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - - 0 'false' suppressOutput", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEventBufferHeader",2081,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadSingleEvent",1504,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEventBuffer",1496,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseGE",647,G__ParseGEDict_655_0_8, 105, G__get_linked_tagnum(&G__ParseGEDictLN_ParseGE), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseGE",647,G__ParseGEDict_655_0_9, 105, G__get_linked_tagnum(&G__ParseGEDictLN_ParseGE), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - newInFileName u 'string' - 0 - newOutFileName "
"i - - 0 '10' clockMult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadAllEvents",1290,G__ParseGEDict_655_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ParseGEDict_655_0_11, 85, G__get_linked_tagnum(&G__ParseGEDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ParseGE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ParseGEDict_655_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParseGE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ParseGEDict_655_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ParseGE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ParseGEDict_655_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ParseGE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ParseGEDict_655_0_15, 85, G__get_linked_tagnum(&G__ParseGEDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ParseGEDict_655_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ParseGEDict_655_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ParseGEDict_655_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ParseGEDict_655_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParseGE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ParseGEDict_655_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParseGE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ParseGEDict_655_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParseGE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ParseGEDict_655_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParseGE::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ParseGE", 773, G__ParseGEDict_655_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncParseGEDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalParseGEDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcParseGEDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ParseGEDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ParseGEDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__ParseGEDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_GEEvent = { "GEEvent" , 99 , -1 };
G__linked_taginfo G__ParseGEDictLN_ParseGE = { "ParseGE" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableParseGEDict() {
  G__ParseGEDictLN_TClass.tagnum = -1 ;
  G__ParseGEDictLN_TBuffer.tagnum = -1 ;
  G__ParseGEDictLN_TMemberInspector.tagnum = -1 ;
  G__ParseGEDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__ParseGEDictLN_string.tagnum = -1 ;
  G__ParseGEDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ParseGEDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ParseGEDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ParseGEDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ParseGEDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ParseGEDictLN_TFile.tagnum = -1 ;
  G__ParseGEDictLN_TTree.tagnum = -1 ;
  G__ParseGEDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ParseGEDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__ParseGEDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__ParseGEDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ParseGEDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ParseGEDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ParseGEDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ParseGEDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ParseGEDictLN_GEEvent.tagnum = -1 ;
  G__ParseGEDictLN_ParseGE.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableParseGEDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_string);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ParseGEDictLN_GEEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ParseGEDictLN_ParseGE),sizeof(ParseGE),-1,296192,(char*)NULL,G__setup_memvarParseGE,G__setup_memfuncParseGE);
}
extern "C" void G__cpp_setupParseGEDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupParseGEDict()");
  G__set_cpp_environmentParseGEDict();
  G__cpp_setup_tagtableParseGEDict();

  G__cpp_setup_inheritanceParseGEDict();

  G__cpp_setup_typetableParseGEDict();

  G__cpp_setup_memvarParseGEDict();

  G__cpp_setup_memfuncParseGEDict();
  G__cpp_setup_globalParseGEDict();
  G__cpp_setup_funcParseGEDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncParseGEDict();
  return;
}
class G__cpp_setup_initParseGEDict {
  public:
    G__cpp_setup_initParseGEDict() { G__add_setup_func("ParseGEDict",(G__incsetup)(&G__cpp_setupParseGEDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initParseGEDict() { G__remove_setup_func("ParseGEDict"); }
};
G__cpp_setup_initParseGEDict G__cpp_setup_initializerParseGEDict;

